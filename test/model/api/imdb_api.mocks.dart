// Mocks generated by Mockito 5.1.0 from annotations
// in mini_project/test/model/api/imdb_api.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:mini_project/model/actor_model.dart' as _i3;
import 'package:mini_project/model/api/imdb_api.dart' as _i5;
import 'package:mini_project/model/data_detail_model.dart' as _i2;
import 'package:mini_project/model/youtube_trailer_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDataDetail_0 extends _i1.Fake implements _i2.DataDetail {}

class _FakeActorModel_1 extends _i1.Fake implements _i3.ActorModel {}

class _FakeYoutubeTrailerModel_2 extends _i1.Fake
    implements _i4.YoutubeTrailerModel {}

/// A class which mocks [ImdbAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockImdbAPI extends _i1.Mock implements _i5.ImdbAPI {
  MockImdbAPI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.DataDetail> getDataDetail({String? id}) =>
      (super.noSuchMethod(Invocation.method(#getDataDetail, [], {#id: id}),
              returnValue: Future<_i2.DataDetail>.value(_FakeDataDetail_0()))
          as _i6.Future<_i2.DataDetail>);
  @override
  _i6.Future<_i3.ActorModel> getActorDetail({String? id}) =>
      (super.noSuchMethod(Invocation.method(#getActorDetail, [], {#id: id}),
              returnValue: Future<_i3.ActorModel>.value(_FakeActorModel_1()))
          as _i6.Future<_i3.ActorModel>);
  @override
  _i6.Future<_i4.YoutubeTrailerModel> getYoutubeId({String? id}) =>
      (super.noSuchMethod(Invocation.method(#getYoutubeId, [], {#id: id}),
              returnValue: Future<_i4.YoutubeTrailerModel>.value(
                  _FakeYoutubeTrailerModel_2()))
          as _i6.Future<_i4.YoutubeTrailerModel>);
}
