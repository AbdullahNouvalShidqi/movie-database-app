// Mocks generated by Mockito 5.1.0 from annotations
// in mini_project/test/model/api/firebase_api.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mini_project/model/api/firebase_api.dart' as _i3;
import 'package:mini_project/model/item_model.dart' as _i5;
import 'package:mini_project/model/user_data_model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserData_0 extends _i1.Fake implements _i2.UserData {}

/// A class which mocks [FirebaseAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAPI extends _i1.Mock implements _i3.FirebaseAPI {
  MockFirebaseAPI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.Item>> getApiData({String? jsonName}) =>
      (super.noSuchMethod(
              Invocation.method(#getApiData, [], {#jsonName: jsonName}),
              returnValue: Future<List<_i5.Item>>.value(<_i5.Item>[]))
          as _i4.Future<List<_i5.Item>>);
  @override
  _i4.Future<void> putUserData({String? uid, _i2.UserData? userData}) =>
      (super.noSuchMethod(
          Invocation.method(#putUserData, [], {#uid: uid, #userData: userData}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.UserData> getUserData({dynamic uid}) =>
      (super.noSuchMethod(Invocation.method(#getUserData, [], {#uid: uid}),
              returnValue: Future<_i2.UserData>.value(_FakeUserData_0()))
          as _i4.Future<_i2.UserData>);
  @override
  _i4.Future<List<_i2.UserData>> getAllUsersData() =>
      (super.noSuchMethod(Invocation.method(#getAllUsersData, []),
              returnValue: Future<List<_i2.UserData>>.value(<_i2.UserData>[]))
          as _i4.Future<List<_i2.UserData>>);
  @override
  _i4.Future<void> addItem({List<_i5.Item>? items, String? uid}) => (super
      .noSuchMethod(Invocation.method(#addItem, [], {#items: items, #uid: uid}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
